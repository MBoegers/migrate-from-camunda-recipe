name: Release

on:
  workflow_dispatch:
    inputs:
      next_version:
        description: 'The next development version to set (append -SNAPSHOT suffix)'
        required: true
      dry_run:
        description: 'Dry-Run: Skips remote operations when true'
        type: boolean
        required: true
        default: false
jobs:
  precheck:
    name: Precheck
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Version
        id: vars
        shell: bash
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed -e 's/-SNAPSHOT//')" >> $GITHUB_OUTPUT
          ./mvnw versions:set -DnewVersion=$VERSION
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "[releng] Releasing version $VERSION"
          git push origin main

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          cache: maven

      - name: Maven Build
        run: ./mvnw clean verify

      - name: Release with JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          JRELEASER_DRY_RUN: ${{ github.event.inputs.dry_run }}

      - name: Set next development version
        run: |
          ./mvnw versions:set -DnewVersion=${{ github.event.inputs.next_version }}
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -am "[releng] Bump version to ${{ github.event.inputs.next_version }}"
          git push origin main

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
